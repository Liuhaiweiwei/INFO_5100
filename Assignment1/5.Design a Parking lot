Design a Parking lot

driver can:
1.search information about the parking lot(available spaces)
2.get a parking card
3.Park their car in the parking lot
4.return a parking card
5.pay for the fee
---------------------------------------------------------
Class:Driver
Behaviour:searchInfo(){
    //check the availability of the parking lot
    ParkingLot parking_lot=new ParkingLot()
    boolean isAvailable
    if(parking_lot.checkAvailableSpace()){
        isAvailable=true
    }else{
        isAvailable=false
    }
    return isAvailable;
}
Behaviour:getParkingCard(Driver driver,ParkingLot parking_lot){
    if(driver.searchInfo()==true){
        Card card=new Card()    //give the card to the driver
        parking_lot.curSpace+1;
}
Behaviour:returnParkingCard(Card card,ParkingLot parking_lot){
    parking_lot.space-1
    payFee(card)
}
Behaviour:payFee(Card card){
    payFeeInfo=(card.startTime-card.endTime)*card.unitPrice
}
---------------------------------------------------------
Class:Card
State:startTime,endTime,unitPrice
---------------------------------------------------------
Class:ParkingLot
State:curSpace,maxSpace
Behaviour:checkAvailableSpace(){
    if(curSpace<maxSpace){
        return true;
    }else{
        return false;
    }
}